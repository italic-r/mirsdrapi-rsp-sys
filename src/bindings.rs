/* automatically generated by rust-bindgen */

pub const mir_sdr_ErrT_mir_sdr_Success: mir_sdr_ErrT = 0;
pub const mir_sdr_ErrT_mir_sdr_Fail: mir_sdr_ErrT = 1;
pub const mir_sdr_ErrT_mir_sdr_InvalidParam: mir_sdr_ErrT = 2;
pub const mir_sdr_ErrT_mir_sdr_OutOfRange: mir_sdr_ErrT = 3;
pub const mir_sdr_ErrT_mir_sdr_GainUpdateError: mir_sdr_ErrT = 4;
pub const mir_sdr_ErrT_mir_sdr_RfUpdateError: mir_sdr_ErrT = 5;
pub const mir_sdr_ErrT_mir_sdr_FsUpdateError: mir_sdr_ErrT = 6;
pub const mir_sdr_ErrT_mir_sdr_HwError: mir_sdr_ErrT = 7;
pub const mir_sdr_ErrT_mir_sdr_AliasingError: mir_sdr_ErrT = 8;
pub const mir_sdr_ErrT_mir_sdr_AlreadyInitialised: mir_sdr_ErrT = 9;
pub const mir_sdr_ErrT_mir_sdr_NotInitialised: mir_sdr_ErrT = 10;
pub const mir_sdr_ErrT_mir_sdr_NotEnabled: mir_sdr_ErrT = 11;
pub const mir_sdr_ErrT_mir_sdr_HwVerError: mir_sdr_ErrT = 12;
pub const mir_sdr_ErrT_mir_sdr_OutOfMemError: mir_sdr_ErrT = 13;
pub const mir_sdr_ErrT_mir_sdr_HwRemoved: mir_sdr_ErrT = 14;
pub type mir_sdr_ErrT = u32;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_Undefined: mir_sdr_Bw_MHzT = 0;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_0_200: mir_sdr_Bw_MHzT = 200;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_0_300: mir_sdr_Bw_MHzT = 300;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_0_600: mir_sdr_Bw_MHzT = 600;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_1_536: mir_sdr_Bw_MHzT = 1536;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_5_000: mir_sdr_Bw_MHzT = 5000;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_6_000: mir_sdr_Bw_MHzT = 6000;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_7_000: mir_sdr_Bw_MHzT = 7000;
pub const mir_sdr_Bw_MHzT_mir_sdr_BW_8_000: mir_sdr_Bw_MHzT = 8000;
pub type mir_sdr_Bw_MHzT = u32;
pub const mir_sdr_If_kHzT_mir_sdr_IF_Undefined: mir_sdr_If_kHzT = -1;
pub const mir_sdr_If_kHzT_mir_sdr_IF_Zero: mir_sdr_If_kHzT = 0;
pub const mir_sdr_If_kHzT_mir_sdr_IF_0_450: mir_sdr_If_kHzT = 450;
pub const mir_sdr_If_kHzT_mir_sdr_IF_1_620: mir_sdr_If_kHzT = 1620;
pub const mir_sdr_If_kHzT_mir_sdr_IF_2_048: mir_sdr_If_kHzT = 2048;
pub type mir_sdr_If_kHzT = i32;
pub const mir_sdr_TransferModeT_mir_sdr_ISOCH: mir_sdr_TransferModeT = 0;
pub const mir_sdr_TransferModeT_mir_sdr_BULK: mir_sdr_TransferModeT = 1;
pub type mir_sdr_TransferModeT = u32;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_NONE: mir_sdr_ReasonForReinitT = 0;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_GR: mir_sdr_ReasonForReinitT = 1;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_FS_FREQ: mir_sdr_ReasonForReinitT = 2;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_RF_FREQ: mir_sdr_ReasonForReinitT = 4;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_BW_TYPE: mir_sdr_ReasonForReinitT = 8;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_IF_TYPE: mir_sdr_ReasonForReinitT = 16;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_LO_MODE: mir_sdr_ReasonForReinitT = 32;
pub const mir_sdr_ReasonForReinitT_mir_sdr_CHANGE_AM_PORT: mir_sdr_ReasonForReinitT = 64;
pub type mir_sdr_ReasonForReinitT = u32;
pub const mir_sdr_LoModeT_mir_sdr_LO_Undefined: mir_sdr_LoModeT = 0;
pub const mir_sdr_LoModeT_mir_sdr_LO_Auto: mir_sdr_LoModeT = 1;
pub const mir_sdr_LoModeT_mir_sdr_LO_120MHz: mir_sdr_LoModeT = 2;
pub const mir_sdr_LoModeT_mir_sdr_LO_144MHz: mir_sdr_LoModeT = 3;
pub const mir_sdr_LoModeT_mir_sdr_LO_168MHz: mir_sdr_LoModeT = 4;
pub type mir_sdr_LoModeT = u32;
pub const mir_sdr_BandT_mir_sdr_BAND_AM_LO: mir_sdr_BandT = 0;
pub const mir_sdr_BandT_mir_sdr_BAND_AM_MID: mir_sdr_BandT = 1;
pub const mir_sdr_BandT_mir_sdr_BAND_AM_HI: mir_sdr_BandT = 2;
pub const mir_sdr_BandT_mir_sdr_BAND_VHF: mir_sdr_BandT = 3;
pub const mir_sdr_BandT_mir_sdr_BAND_3: mir_sdr_BandT = 4;
pub const mir_sdr_BandT_mir_sdr_BAND_X: mir_sdr_BandT = 5;
pub const mir_sdr_BandT_mir_sdr_BAND_4_5: mir_sdr_BandT = 6;
pub const mir_sdr_BandT_mir_sdr_BAND_L: mir_sdr_BandT = 7;
pub type mir_sdr_BandT = u32;
pub const mir_sdr_SetGrModeT_mir_sdr_USE_SET_GR: mir_sdr_SetGrModeT = 0;
pub const mir_sdr_SetGrModeT_mir_sdr_USE_SET_GR_ALT_MODE: mir_sdr_SetGrModeT = 1;
pub const mir_sdr_SetGrModeT_mir_sdr_USE_RSP_SET_GR: mir_sdr_SetGrModeT = 2;
pub type mir_sdr_SetGrModeT = u32;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_UNKNOWN: mir_sdr_RSPII_BandT = 0;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_AM_LO: mir_sdr_RSPII_BandT = 1;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_AM_MID: mir_sdr_RSPII_BandT = 2;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_AM_HI: mir_sdr_RSPII_BandT = 3;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_VHF: mir_sdr_RSPII_BandT = 4;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_3: mir_sdr_RSPII_BandT = 5;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_X_LO: mir_sdr_RSPII_BandT = 6;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_X_MID: mir_sdr_RSPII_BandT = 7;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_X_HI: mir_sdr_RSPII_BandT = 8;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_4_5: mir_sdr_RSPII_BandT = 9;
pub const mir_sdr_RSPII_BandT_mir_sdr_RSPII_BAND_L: mir_sdr_RSPII_BandT = 10;
pub type mir_sdr_RSPII_BandT = u32;
pub const mir_sdr_RSPII_AntennaSelectT_mir_sdr_RSPII_ANTENNA_A: mir_sdr_RSPII_AntennaSelectT = 5;
pub const mir_sdr_RSPII_AntennaSelectT_mir_sdr_RSPII_ANTENNA_B: mir_sdr_RSPII_AntennaSelectT = 6;
pub type mir_sdr_RSPII_AntennaSelectT = u32;
pub const mir_sdr_AgcControlT_mir_sdr_AGC_DISABLE: mir_sdr_AgcControlT = 0;
pub const mir_sdr_AgcControlT_mir_sdr_AGC_100HZ: mir_sdr_AgcControlT = 1;
pub const mir_sdr_AgcControlT_mir_sdr_AGC_50HZ: mir_sdr_AgcControlT = 2;
pub const mir_sdr_AgcControlT_mir_sdr_AGC_5HZ: mir_sdr_AgcControlT = 3;
pub type mir_sdr_AgcControlT = u32;
pub const mir_sdr_GainMessageIdT_mir_sdr_GAIN_MESSAGE_START_ID: mir_sdr_GainMessageIdT = 2147483648;
pub const mir_sdr_GainMessageIdT_mir_sdr_ADC_OVERLOAD_DETECTED: mir_sdr_GainMessageIdT = 2147483649;
pub const mir_sdr_GainMessageIdT_mir_sdr_ADC_OVERLOAD_CORRECTED: mir_sdr_GainMessageIdT =
    2147483650;
pub type mir_sdr_GainMessageIdT = u32;
pub const mir_sdr_MinGainReductionT_mir_sdr_EXTENDED_MIN_GR: mir_sdr_MinGainReductionT = 0;
pub const mir_sdr_MinGainReductionT_mir_sdr_NORMAL_MIN_GR: mir_sdr_MinGainReductionT = 20;
pub type mir_sdr_MinGainReductionT = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mir_sdr_DeviceT {
    pub SerNo: *mut ::std::os::raw::c_char,
    pub DevNm: *mut ::std::os::raw::c_char,
    pub hwVer: ::std::os::raw::c_uchar,
    pub devAvail: ::std::os::raw::c_uchar,
}
#[test]
fn bindgen_test_layout_mir_sdr_DeviceT() {
    assert_eq!(
        ::std::mem::size_of::<mir_sdr_DeviceT>(),
        24usize,
        concat!("Size of: ", stringify!(mir_sdr_DeviceT))
    );
    assert_eq!(
        ::std::mem::align_of::<mir_sdr_DeviceT>(),
        8usize,
        concat!("Alignment of ", stringify!(mir_sdr_DeviceT))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_DeviceT>())).SerNo as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_DeviceT),
            "::",
            stringify!(SerNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_DeviceT>())).DevNm as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_DeviceT),
            "::",
            stringify!(DevNm)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_DeviceT>())).hwVer as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_DeviceT),
            "::",
            stringify!(hwVer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_DeviceT>())).devAvail as *const _ as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_DeviceT),
            "::",
            stringify!(devAvail)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mir_sdr_GainValuesT {
    pub curr: f32,
    pub max: f32,
    pub min: f32,
}
#[test]
fn bindgen_test_layout_mir_sdr_GainValuesT() {
    assert_eq!(
        ::std::mem::size_of::<mir_sdr_GainValuesT>(),
        12usize,
        concat!("Size of: ", stringify!(mir_sdr_GainValuesT))
    );
    assert_eq!(
        ::std::mem::align_of::<mir_sdr_GainValuesT>(),
        4usize,
        concat!("Alignment of ", stringify!(mir_sdr_GainValuesT))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_GainValuesT>())).curr as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_GainValuesT),
            "::",
            stringify!(curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_GainValuesT>())).max as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_GainValuesT),
            "::",
            stringify!(max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<mir_sdr_GainValuesT>())).min as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(mir_sdr_GainValuesT),
            "::",
            stringify!(min)
        )
    );
}
pub const mir_sdr_rspDuo_TunerSelT_mir_sdr_rspDuo_Tuner_1: mir_sdr_rspDuo_TunerSelT = 1;
pub const mir_sdr_rspDuo_TunerSelT_mir_sdr_rspDuo_Tuner_2: mir_sdr_rspDuo_TunerSelT = 2;
pub type mir_sdr_rspDuo_TunerSelT = u32;
pub type mir_sdr_StreamCallback_t = ::std::option::Option<
    unsafe extern "C" fn(
        xi: *mut ::std::os::raw::c_short,
        xq: *mut ::std::os::raw::c_short,
        firstSampleNum: ::std::os::raw::c_uint,
        grChanged: ::std::os::raw::c_int,
        rfChanged: ::std::os::raw::c_int,
        fsChanged: ::std::os::raw::c_int,
        numSamples: ::std::os::raw::c_uint,
        reset: ::std::os::raw::c_uint,
        hwRemoved: ::std::os::raw::c_uint,
        cbContext: *mut ::std::os::raw::c_void,
    ),
>;
pub type mir_sdr_GainChangeCallback_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: ::std::os::raw::c_uint,
        lnaGRdB: ::std::os::raw::c_uint,
        cbContext: *mut ::std::os::raw::c_void,
    ),
>;
pub type mir_sdr_Init_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_Uninit_t = ::std::option::Option<unsafe extern "C" fn() -> mir_sdr_ErrT>;
pub type mir_sdr_ReadPacket_t = ::std::option::Option<
    unsafe extern "C" fn(
        xi: *mut ::std::os::raw::c_short,
        xq: *mut ::std::os::raw::c_short,
        firstSampleNum: *mut ::std::os::raw::c_uint,
        grChanged: *mut ::std::os::raw::c_int,
        rfChanged: *mut ::std::os::raw::c_int,
        fsChanged: *mut ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetRf_t = ::std::option::Option<
    unsafe extern "C" fn(
        drfHz: f64,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetFs_t = ::std::option::Option<
    unsafe extern "C" fn(
        dfsHz: f64,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
        reCal: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetGr_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetGrParams_t = ::std::option::Option<
    unsafe extern "C" fn(
        minimumGr: ::std::os::raw::c_int,
        lnaGrThreshold: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetDcMode_t = ::std::option::Option<
    unsafe extern "C" fn(
        dcCal: ::std::os::raw::c_int,
        speedUp: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetDcTrackTime_t =
    ::std::option::Option<unsafe extern "C" fn(trackTime: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_SetSyncUpdateSampleNum_t =
    ::std::option::Option<unsafe extern "C" fn(sampleNum: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_SetSyncUpdatePeriod_t =
    ::std::option::Option<unsafe extern "C" fn(period: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_ApiVersion_t =
    ::std::option::Option<unsafe extern "C" fn(version: *mut f32) -> mir_sdr_ErrT>;
pub type mir_sdr_ResetUpdateFlags_t = ::std::option::Option<
    unsafe extern "C" fn(
        resetGainUpdate: ::std::os::raw::c_int,
        resetRfUpdate: ::std::os::raw::c_int,
        resetFsUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetTransferMode_t =
    ::std::option::Option<unsafe extern "C" fn(mode: mir_sdr_TransferModeT) -> mir_sdr_ErrT>;
pub type mir_sdr_DownConvert_t = ::std::option::Option<
    unsafe extern "C" fn(
        in_: *mut ::std::os::raw::c_short,
        xi: *mut ::std::os::raw::c_short,
        xq: *mut ::std::os::raw::c_short,
        samplesPerPacket: ::std::os::raw::c_uint,
        ifType: mir_sdr_If_kHzT,
        M: ::std::os::raw::c_uint,
        preReset: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetParam_t = ::std::option::Option<
    unsafe extern "C" fn(id: ::std::os::raw::c_uint, value: ::std::os::raw::c_uint) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetPpm_t = ::std::option::Option<unsafe extern "C" fn(ppm: f64) -> mir_sdr_ErrT>;
pub type mir_sdr_SetLoMode_t =
    ::std::option::Option<unsafe extern "C" fn(loMode: mir_sdr_LoModeT) -> mir_sdr_ErrT>;
pub type mir_sdr_SetGrAltMode_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRidx: *mut ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_DCoffsetIQimbalanceControl_t = ::std::option::Option<
    unsafe extern "C" fn(
        DCenable: ::std::os::raw::c_uint,
        IQenable: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_DecimateControl_t = ::std::option::Option<
    unsafe extern "C" fn(
        enable: ::std::os::raw::c_uint,
        decimationFactor: ::std::os::raw::c_uint,
        wideBandSignal: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_AgcControl_t = ::std::option::Option<
    unsafe extern "C" fn(
        enable: mir_sdr_AgcControlT,
        setPoint_dBfs: ::std::os::raw::c_int,
        knee_dBfs: ::std::os::raw::c_int,
        decay_ms: ::std::os::raw::c_uint,
        hang_ms: ::std::os::raw::c_uint,
        syncUpdate: ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_StreamInit_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: *mut ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
        StreamCbFn: mir_sdr_StreamCallback_t,
        GainChangeCbFn: mir_sdr_GainChangeCallback_t,
        cbContext: *mut ::std::os::raw::c_void,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_StreamUninit_t = ::std::option::Option<unsafe extern "C" fn() -> mir_sdr_ErrT>;
pub type mir_sdr_Reinit_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: *mut ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        loMode: mir_sdr_LoModeT,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
        reasonForReinit: mir_sdr_ReasonForReinitT,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_GetGrByFreq_t = ::std::option::Option<
    unsafe extern "C" fn(
        rfMHz: f64,
        band: *mut mir_sdr_BandT,
        gRdB: *mut ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_DebugEnable_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_GetCurrentGain_t =
    ::std::option::Option<unsafe extern "C" fn(gainVals: *mut mir_sdr_GainValuesT) -> mir_sdr_ErrT>;
pub type mir_sdr_GainChangeCallbackMessageReceived_t =
    ::std::option::Option<unsafe extern "C" fn() -> mir_sdr_ErrT>;
pub type mir_sdr_GetDevices_t = ::std::option::Option<
    unsafe extern "C" fn(
        devices: *mut mir_sdr_DeviceT,
        numDevs: *mut ::std::os::raw::c_uint,
        maxDevs: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_SetDeviceIdx_t =
    ::std::option::Option<unsafe extern "C" fn(idx: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_ReleaseDeviceIdx_t = ::std::option::Option<unsafe extern "C" fn() -> mir_sdr_ErrT>;
pub type mir_sdr_GetHwVersion_t =
    ::std::option::Option<unsafe extern "C" fn(ver: *mut ::std::os::raw::c_uchar) -> mir_sdr_ErrT>;
pub type mir_sdr_RSPII_AntennaControl_t = ::std::option::Option<
    unsafe extern "C" fn(select: mir_sdr_RSPII_AntennaSelectT) -> mir_sdr_ErrT,
>;
pub type mir_sdr_RSPII_ExternalReferenceControl_t = ::std::option::Option<
    unsafe extern "C" fn(output_enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT,
>;
pub type mir_sdr_RSPII_BiasTControl_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_RSPII_RfNotchEnable_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT>;
pub type mir_sdr_RSP_SetGr_t = ::std::option::Option<
    unsafe extern "C" fn(
        gRdB: ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT,
>;
pub type mir_sdr_RSP_SetGrLimits_t =
    ::std::option::Option<unsafe extern "C" fn(minGr: mir_sdr_MinGainReductionT) -> mir_sdr_ErrT>;
pub type mir_sdr_AmPortSelect_t =
    ::std::option::Option<unsafe extern "C" fn(port: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rsp1a_BiasT_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rsp1a_DabNotch_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rsp1a_BroadcastNotch_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_TunerSel_t =
    ::std::option::Option<unsafe extern "C" fn(sel: mir_sdr_rspDuo_TunerSelT) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_ExtRef_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_BiasT_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_Tuner1AmNotch_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_BroadcastNotch_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
pub type mir_sdr_rspDuo_DabNotch_t =
    ::std::option::Option<unsafe extern "C" fn(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT>;
extern "C" {
    pub fn mir_sdr_Init(
        gRdB: ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_Uninit() -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_ReadPacket(
        xi: *mut ::std::os::raw::c_short,
        xq: *mut ::std::os::raw::c_short,
        firstSampleNum: *mut ::std::os::raw::c_uint,
        grChanged: *mut ::std::os::raw::c_int,
        rfChanged: *mut ::std::os::raw::c_int,
        fsChanged: *mut ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetRf(
        drfHz: f64,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetFs(
        dfsHz: f64,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
        reCal: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetGr(
        gRdB: ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetGrParams(
        minimumGr: ::std::os::raw::c_int,
        lnaGrThreshold: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetDcMode(
        dcCal: ::std::os::raw::c_int,
        speedUp: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetDcTrackTime(trackTime: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetSyncUpdateSampleNum(sampleNum: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetSyncUpdatePeriod(period: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_ApiVersion(version: *mut f32) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_ResetUpdateFlags(
        resetGainUpdate: ::std::os::raw::c_int,
        resetRfUpdate: ::std::os::raw::c_int,
        resetFsUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetTransferMode(mode: mir_sdr_TransferModeT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_DownConvert(
        in_: *mut ::std::os::raw::c_short,
        xi: *mut ::std::os::raw::c_short,
        xq: *mut ::std::os::raw::c_short,
        samplesPerPacket: ::std::os::raw::c_uint,
        ifType: mir_sdr_If_kHzT,
        M: ::std::os::raw::c_uint,
        preReset: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetParam(
        id: ::std::os::raw::c_uint,
        value: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetPpm(ppm: f64) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetLoMode(loMode: mir_sdr_LoModeT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetGrAltMode(
        gRidx: *mut ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_DCoffsetIQimbalanceControl(
        DCenable: ::std::os::raw::c_uint,
        IQenable: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_DecimateControl(
        enable: ::std::os::raw::c_uint,
        decimationFactor: ::std::os::raw::c_uint,
        wideBandSignal: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_AgcControl(
        enable: mir_sdr_AgcControlT,
        setPoint_dBfs: ::std::os::raw::c_int,
        knee_dBfs: ::std::os::raw::c_int,
        decay_ms: ::std::os::raw::c_uint,
        hang_ms: ::std::os::raw::c_uint,
        syncUpdate: ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_StreamInit(
        gRdB: *mut ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
        StreamCbFn: mir_sdr_StreamCallback_t,
        GainChangeCbFn: mir_sdr_GainChangeCallback_t,
        cbContext: *mut ::std::os::raw::c_void,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_StreamUninit() -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_Reinit(
        gRdB: *mut ::std::os::raw::c_int,
        fsMHz: f64,
        rfMHz: f64,
        bwType: mir_sdr_Bw_MHzT,
        ifType: mir_sdr_If_kHzT,
        loMode: mir_sdr_LoModeT,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
        samplesPerPacket: *mut ::std::os::raw::c_int,
        reasonForReinit: mir_sdr_ReasonForReinitT,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_GetGrByFreq(
        rfMHz: f64,
        band: *mut mir_sdr_BandT,
        gRdB: *mut ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        gRdBsystem: *mut ::std::os::raw::c_int,
        setGrMode: mir_sdr_SetGrModeT,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_DebugEnable(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_GetCurrentGain(gainVals: *mut mir_sdr_GainValuesT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_GainChangeCallbackMessageReceived() -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_GetDevices(
        devices: *mut mir_sdr_DeviceT,
        numDevs: *mut ::std::os::raw::c_uint,
        maxDevs: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_SetDeviceIdx(idx: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_ReleaseDeviceIdx() -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_GetHwVersion(ver: *mut ::std::os::raw::c_uchar) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSPII_AntennaControl(select: mir_sdr_RSPII_AntennaSelectT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSPII_ExternalReferenceControl(
        output_enable: ::std::os::raw::c_uint,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSPII_BiasTControl(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSPII_RfNotchEnable(enable: ::std::os::raw::c_uint) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSP_SetGr(
        gRdB: ::std::os::raw::c_int,
        LNAstate: ::std::os::raw::c_int,
        abs: ::std::os::raw::c_int,
        syncUpdate: ::std::os::raw::c_int,
    ) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_RSP_SetGrLimits(minGr: mir_sdr_MinGainReductionT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_AmPortSelect(port: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rsp1a_BiasT(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rsp1a_DabNotch(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rsp1a_BroadcastNotch(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_TunerSel(sel: mir_sdr_rspDuo_TunerSelT) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_ExtRef(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_BiasT(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_Tuner1AmNotch(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_BroadcastNotch(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
extern "C" {
    pub fn mir_sdr_rspDuo_DabNotch(enable: ::std::os::raw::c_int) -> mir_sdr_ErrT;
}
